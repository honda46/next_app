{"ast":null,"code":"import { createStore, applyMiddleware } from 'redux';\nimport thunkMiddleware from 'redux-thunk';\nimport firebase from \"firebase\"; // Firebaseの初期化\n\nvar config = {\n  apiKey: \" APIキー \",\n  authDomain: \"プロジェクト.firebaseapp.com\",\n  databaseURL: \"https://プロジェクト.firebaseio.com\",\n  projectId: \"プロジェクト\",\n  storageBucket: \"プロジェクト.appspot.com\",\n  messagingSenderId: \" ID番号 \"\n};\nvar fireapp;\n\ntry {\n  firebase.initializeApp(config);\n} catch (error) {\n  console.log(error.message);\n}\n\nexport default fireapp; // ステート初期値\n\nconst initial = {}; // レデューサー（ダミー）\n\nfunction fireReducer(state = intitial, action) {\n  switch (action.type) {\n    // ダミー\n    case 'TESTACTION':\n      return state;\n    // デフォルト\n\n    default:\n      return state;\n  }\n} // initStore関数\n\n\nexport function initStore(state = initial) {\n  return createStore(fireReducer, state, applyMiddleware(thunkMiddleware));\n}","map":{"version":3,"sources":["C:/home/next_app/store.js"],"names":["createStore","applyMiddleware","thunkMiddleware","firebase","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","fireapp","initializeApp","error","console","log","message","initial","fireReducer","state","intitial","action","type","initStore"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,OAAOC,eAAP,MAA4B,aAA5B;AACA,OAAOC,QAAP,MAAqB,UAArB,C,CAEA;;AACA,IAAIC,MAAM,GAAG;AACXC,EAAAA,MAAM,EAAE,SADG;AAEXC,EAAAA,UAAU,EAAE,wBAFD;AAGXC,EAAAA,WAAW,EAAE,+BAHF;AAIXC,EAAAA,SAAS,EAAE,QAJA;AAKXC,EAAAA,aAAa,EAAE,oBALJ;AAMXC,EAAAA,iBAAiB,EAAE;AANR,CAAb;AASA,IAAIC,OAAJ;;AACA,IAAI;AACFR,EAAAA,QAAQ,CAACS,aAAT,CAAuBR,MAAvB;AACD,CAFD,CAEE,OAAOS,KAAP,EAAc;AACdC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,OAAlB;AACD;;AACD,eAAeL,OAAf,C,CAEA;;AACA,MAAMM,OAAO,GAAG,EAAhB,C,CAGA;;AACA,SAASC,WAAT,CAAqBC,KAAK,GAAGC,QAA7B,EAAuCC,MAAvC,EAA+C;AAC7C,UAAQA,MAAM,CAACC,IAAf;AACE;AACA,SAAK,YAAL;AACE,aAAOH,KAAP;AACF;;AACA;AACE,aAAOA,KAAP;AANJ;AAQD,C,CAED;;;AACA,OAAO,SAASI,SAAT,CAAmBJ,KAAK,GAAGF,OAA3B,EAAoC;AACzC,SAAOjB,WAAW,CAACkB,WAAD,EAAcC,KAAd,EAChBlB,eAAe,CAACC,eAAD,CADC,CAAlB;AAED","sourcesContent":["import { createStore, applyMiddleware } from 'redux'\r\nimport thunkMiddleware from 'redux-thunk'\r\nimport firebase from \"firebase\";\r\n\r\n// Firebaseの初期化\r\nvar config = {\r\n  apiKey: \" APIキー \",\r\n  authDomain: \"プロジェクト.firebaseapp.com\",\r\n  databaseURL: \"https://プロジェクト.firebaseio.com\",\r\n  projectId: \"プロジェクト\",\r\n  storageBucket: \"プロジェクト.appspot.com\",\r\n  messagingSenderId: \" ID番号 \"\r\n};\r\n\r\nvar fireapp;\r\ntry {\r\n  firebase.initializeApp(config);\r\n} catch (error) {\r\n  console.log(error.message);\r\n}\r\nexport default fireapp;\r\n\r\n// ステート初期値\r\nconst initial = {\r\n}\r\n\r\n// レデューサー（ダミー）\r\nfunction fireReducer(state = intitial, action) {\r\n  switch (action.type) {\r\n    // ダミー\r\n    case 'TESTACTION':\r\n      return state;\r\n    // デフォルト\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\n// initStore関数\r\nexport function initStore(state = initial) {\r\n  return createStore(fireReducer, state,\r\n    applyMiddleware(thunkMiddleware))\r\n}\r\n"]},"metadata":{},"sourceType":"module"}