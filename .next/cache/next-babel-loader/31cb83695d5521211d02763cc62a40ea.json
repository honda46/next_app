{"ast":null,"code":"import _regeneratorRuntime from \"C:/home/next_app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"C:/home/next_app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"C:/home/next_app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/home/next_app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"C:/home/next_app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"C:/home/next_app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:/home/next_app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\home\\\\next_app\\\\components\\\\QR_sample.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport firebase from \"firebase\";\nimport \"firebase/storage\";\nimport { useQRCode } from 'react-hook-qrcode';\nimport Link from 'next/link';\nimport QRCode from \"qrcode.react\";\n\nvar QR_sample = /*#__PURE__*/function (_Component) {\n  _inherits(QR_sample, _Component);\n\n  var _super = _createSuper(QR_sample);\n\n  function QR_sample(props) {\n    var _this;\n\n    _classCallCheck(this, QR_sample);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      data: \"a\"\n    };\n    return _this;\n  }\n\n  _createClass(QR_sample, [{\n    key: \"getFireData\",\n    value: function () {\n      var _getFireData = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var Result, db, doc;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                Result = \"a\";\n                db = firebase.firestore();\n                _context.next = 4;\n                return db.collection('users').doc('001').get();\n\n              case 4:\n                doc = _context.sent;\n                Result = JSON.stringify(doc.data());\n                console.log(\"Document data:\", Result); //ここのResultにはちゃんと格納されている\n\n                return _context.abrupt(\"return\", Result);\n\n              case 8:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function getFireData() {\n        return _getFireData.apply(this, arguments);\n      }\n\n      return getFireData;\n    }()\n  }, {\n    key: \"getQr\",\n    value: function () {\n      var _getQr = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return this.getFireData() + \"ABC\";\n\n              case 2:\n                this.state.data = _context2.sent;\n                console.log(\"Document data:\", this.state.data); //dataの中身は[object Promise]ABCなのでResultがうまく反映されていない\n                //なのでstateの更新は出来ている？\n                //コンソールの順番が getQr → getFireDataになっている\n\n              case 4:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function getQr() {\n        return _getQr.apply(this, arguments);\n      }\n\n      return getQr;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      while (this.state.data == \"a\") {\n        this.getQr();\n      }\n\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"\\u53D6\\u5F97\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(QRCode, {\n            value: this.state.data\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          href: \"/other\",\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            children: \"Back to Home\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 7\n      }, this);\n    }\n  }]);\n\n  return QR_sample;\n}(Component);\n\nexport default QR_sample; // getFireData(){\n//   let Result = \"Test\";\n//   const db = firebase.firestore();\n//   db.collection('users').doc('001').get().then((doc) =>{\n//     Result = JSON.stringify(doc.data());//←これだけがうまくいってない？というより非同期のため記録出来てない(コンソールは遅れても問題ない)\n//     console.log(JSON.stringify(doc.data()));//←これも動作してる\n//   });\n//   this.state.data = Result;//this.state.dataはTestと表示されるためこれも動作している\n//   console.log(\"Document data:\",this.state.data);\n// }","map":{"version":3,"sources":["C:/home/next_app/components/QR_sample.js"],"names":["React","Component","firebase","useQRCode","Link","QRCode","QR_sample","props","state","data","Result","db","firestore","collection","doc","get","JSON","stringify","console","log","getFireData","getQr"],"mappings":";;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,QAAP,MAAqB,UAArB;AACA,OAAO,kBAAP;AACA,SAASC,SAAT,QAA0B,mBAA1B;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,MAAP,MAAmB,cAAnB;;IAEMC,S;;;;;AAEJ,qBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,8BAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACXC,MAAAA,IAAI,EAAE;AADK,KAAb;AAFiB;AAKlB;;;;;;;;;;;AAGKC,gBAAAA,M,GAAS,G;AACPC,gBAAAA,E,GAAKT,QAAQ,CAACU,SAAT,E;;uBACOD,EAAE,CAACE,UAAH,CAAc,OAAd,EAAuBC,GAAvB,CAA2B,KAA3B,EAAkCC,GAAlC,E;;;AAAZD,gBAAAA,G;AACNJ,gBAAAA,MAAM,GAAGM,IAAI,CAACC,SAAL,CAAeH,GAAG,CAACL,IAAJ,EAAf,CAAT;AACAS,gBAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA6BT,MAA7B,E,CAAqC;;iDAC9BA,M;;;;;;;;;;;;;;;;;;;;;;;;;uBAGkB,KAAKU,WAAL,KAAqB,K;;;AAA9C,qBAAKZ,KAAL,CAAWC,I;AACXS,gBAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA6B,KAAKX,KAAL,CAAWC,IAAxC,E,CAA8C;AAC9C;AACA;;;;;;;;;;;;;;;;;;6BAIM;AACN,aAAM,KAAKD,KAAL,CAAWC,IAAX,IAAmB,GAAzB,EAA6B;AAC3B,aAAKY,KAAL;AACD;;AACD,0BACE;AAAA,gCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAA,iCACE,QAAC,MAAD;AAAQ,YAAA,KAAK,EAAG,KAAKb,KAAL,CAAWC;AAA3B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAKI,QAAC,IAAD;AAAM,UAAA,IAAI,EAAC,QAAX;AAAA,iCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBALJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADF;AAWD;;;;EAxCqBR,S;;AA2CxB,eAAeK,SAAf,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React, {Component} from 'react'\r\nimport firebase from \"firebase\";\r\nimport \"firebase/storage\";\r\nimport { useQRCode } from 'react-hook-qrcode';\r\nimport Link from 'next/link';\r\nimport QRCode from \"qrcode.react\";\r\n\r\nclass QR_sample extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: \"a\"\r\n    }\r\n  }\r\n\r\n  async getFireData(){\r\n    let Result = \"a\";\r\n    const db = firebase.firestore();\r\n    const doc = await db.collection('users').doc('001').get();\r\n    Result = JSON.stringify(doc.data());\r\n    console.log(\"Document data:\",Result);//ここのResultにはちゃんと格納されている\r\n    return Result;\r\n  }\r\n  async getQr(){\r\n    this.state.data = await (this.getFireData() + \"ABC\");\r\n    console.log(\"Document data:\",this.state.data);//dataの中身は[object Promise]ABCなのでResultがうまく反映されていない\r\n    //なのでstateの更新は出来ている？\r\n    //コンソールの順番が getQr → getFireDataになっている\r\n  }\r\n\r\n\r\n  render(){\r\n    while(this.state.data == \"a\"){\r\n      this.getQr();\r\n    }\r\n    return (\r\n      <div>\r\n          <button>取得</button>\r\n          <div>\r\n            <QRCode value= {this.state.data} />\r\n          </div>\r\n          <Link href=\"/other\">\r\n            <a>Back to Home</a>\r\n          </Link>\r\n      </div>\r\n    );\r\n  }\r\n\r\n}\r\nexport default QR_sample;\r\n\r\n// getFireData(){\r\n//   let Result = \"Test\";\r\n//   const db = firebase.firestore();\r\n//   db.collection('users').doc('001').get().then((doc) =>{\r\n//     Result = JSON.stringify(doc.data());//←これだけがうまくいってない？というより非同期のため記録出来てない(コンソールは遅れても問題ない)\r\n//     console.log(JSON.stringify(doc.data()));//←これも動作してる\r\n//   });\r\n//   this.state.data = Result;//this.state.dataはTestと表示されるためこれも動作している\r\n//   console.log(\"Document data:\",this.state.data);\r\n// }\r\n"]},"metadata":{},"sourceType":"module"}