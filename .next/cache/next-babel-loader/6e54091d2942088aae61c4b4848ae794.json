{"ast":null,"code":"import _regeneratorRuntime from \"C:/home/next_app/node_modules/@babel/runtime/regenerator\";\nimport _slicedToArray from \"C:/home/next_app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _asyncToGenerator from \"C:/home/next_app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\home\\\\next_app\\\\pages\\\\qrread.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useQRCode } from 'react-hook-qrcode';\n\nvar Sample = function Sample() {\n  _s();\n\n  function getFireData() {\n    return _getFireData.apply(this, arguments);\n  }\n\n  function _getFireData() {\n    _getFireData = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var db, doc;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              db = firebase.firestore();\n              _context.next = 3;\n              return db.collection('users').doc('001').get();\n\n            case 3:\n              doc = _context.sent;\n              return _context.abrupt(\"return\", JSON.stringify(doc.data()));\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return _getFireData.apply(this, arguments);\n  }\n\n  var _useQRCode = useQRCode({\n    text: _this.getFireData(),\n    options: {\n      level: 'M',\n      margin: 7,\n      scale: 1,\n      width: 200,\n      color: {\n        dark: '#3FB811',\n        light: '#DDDDDD'\n      }\n    }\n  }),\n      _useQRCode2 = _slicedToArray(_useQRCode, 1),\n      inputRef = _useQRCode2[0];\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: inputRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(Sample, \"RF2LtVJ0Y6hob+3yCXoQillEU14=\", false, function () {\n  return [useQRCode];\n});\n\n_c = Sample;\nexport default Sample;\n\nvar _c;\n\n$RefreshReg$(_c, \"Sample\");","map":{"version":3,"sources":["C:/home/next_app/pages/qrread.js"],"names":["React","useQRCode","Sample","getFireData","db","firebase","firestore","collection","doc","get","JSON","stringify","data","text","options","level","margin","scale","width","color","dark","light","inputRef"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,mBAA1B;;AAEA,IAAMC,MAAM,GAAG,SAATA,MAAS,GAAM;AAAA;;AAAA,WAEJC,WAFI;AAAA;AAAA;;AAAA;AAAA,4EAEnB;AAAA;AAAA;AAAA;AAAA;AAAA;AACQC,cAAAA,EADR,GACaC,QAAQ,CAACC,SAAT,EADb;AAAA;AAAA,qBAEoBF,EAAE,CAACG,UAAH,CAAc,OAAd,EAAuBC,GAAvB,CAA2B,KAA3B,EAAkCC,GAAlC,EAFpB;;AAAA;AAEQD,cAAAA,GAFR;AAAA,+CAGSE,IAAI,CAACC,SAAL,CAAeH,GAAG,CAACI,IAAJ,EAAf,CAHT;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAFmB;AAAA;AAAA;;AAAA,mBAQAX,SAAS,CAAC;AAC3BY,IAAAA,IAAI,EAAE,KAAI,CAACV,WAAL,EADqB;AAE3BW,IAAAA,OAAO,EAAE;AACPC,MAAAA,KAAK,EAAE,GADA;AAEPC,MAAAA,MAAM,EAAE,CAFD;AAGPC,MAAAA,KAAK,EAAE,CAHA;AAIPC,MAAAA,KAAK,EAAE,GAJA;AAKPC,MAAAA,KAAK,EAAE;AACLC,QAAAA,IAAI,EAAE,SADD;AAELC,QAAAA,KAAK,EAAE;AAFF;AALA;AAFkB,GAAD,CART;AAAA;AAAA,MAQZC,QARY;;AAqBnB,sBACE;AAAA,2BACE;AAAQ,MAAA,GAAG,EAAEA;AAAb;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,WADF;AAKD,CA1BD;;GAAMpB,M;UAQeD,S;;;KARfC,M;AA4BN,eAAeA,MAAf","sourcesContent":["import React from 'react';\r\nimport { useQRCode } from 'react-hook-qrcode';\r\n\r\nconst Sample = () => {\r\n\r\n  async function getFireData(){\r\n    const db = firebase.firestore();\r\n    const doc = await db.collection('users').doc('001').get();\r\n    return JSON.stringify(doc.data());\r\n  }\r\n\r\n  const [inputRef] = useQRCode({\r\n    text: this.getFireData(),\r\n    options: {\r\n      level: 'M',\r\n      margin: 7,\r\n      scale: 1,\r\n      width: 200,\r\n      color: {\r\n        dark: '#3FB811',\r\n        light: '#DDDDDD',\r\n      },\r\n    },\r\n  });\r\n  return (\r\n    <div>\r\n      <canvas ref={inputRef} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Sample;\r\n"]},"metadata":{},"sourceType":"module"}