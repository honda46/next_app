{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\home\\\\next_app\\\\components\\\\Counter.js\";\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nclass Counter extends Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"style\", {\n      fontSize: \"12pt\",\n      padding: \"5px 15px\"\n    });\n\n    this.doAction = this.doAction.bind(this);\n    this.reset = this.reset.bind(this);\n  }\n\n  doAction(e) {\n    if (e.shiftKey) {\n      return this.props.dispatch({\n        type: 'DECREMENT'\n      });\n    } else {\n      return this.props.dispatch({\n        type: 'INCREMENT'\n      });\n    }\n  }\n\n  reset() {\n    return this.props.dispatch({\n      type: 'RESET'\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [this.props.message, \": \", this.props.count]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        style: this.style,\n        onClick: this.doAction,\n        children: \"Count\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        style: this.style,\n        onClick: this.reset,\n        children: \"Reset\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nCounter = connect(state => state)(Counter);\nexport default Counter;","map":{"version":3,"sources":["C:/home/next_app/components/Counter.js"],"names":["React","Component","connect","Counter","constructor","props","fontSize","padding","doAction","bind","reset","e","shiftKey","dispatch","type","render","message","count","style","state"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAASC,OAAT,QAAwB,aAAxB;;AAGA,MAAMC,OAAN,SAAsBF,SAAtB,CAAgC;AAO9BG,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,mCANX;AACNC,MAAAA,QAAQ,EAAC,MADH;AAENC,MAAAA,OAAO,EAAC;AAFF,KAMW;;AAEjB,SAAKC,QAAL,GAAgB,KAAKA,QAAL,CAAcC,IAAd,CAAmB,IAAnB,CAAhB;AACA,SAAKC,KAAL,GAAa,KAAKA,KAAL,CAAWD,IAAX,CAAgB,IAAhB,CAAb;AACD;;AAGDD,EAAAA,QAAQ,CAACG,CAAD,EAAG;AACT,QAAIA,CAAC,CAACC,QAAN,EAAe;AACb,aAAO,KAAKP,KAAL,CAAWQ,QAAX,CAAoB;AAAEC,QAAAA,IAAI,EAAC;AAAP,OAApB,CAAP;AACD,KAFD,MAEO;AACL,aAAO,KAAKT,KAAL,CAAWQ,QAAX,CAAoB;AAAEC,QAAAA,IAAI,EAAC;AAAP,OAApB,CAAP;AACD;AACF;;AAGDJ,EAAAA,KAAK,GAAG;AACN,WAAO,KAAKL,KAAL,CAAWQ,QAAX,CAAoB;AAAEC,MAAAA,IAAI,EAAC;AAAP,KAApB,CAAP;AACD;;AAGDC,EAAAA,MAAM,GAAI;AACR,wBACE;AAAA,8BACE;AAAA,mBAAI,KAAKV,KAAL,CAAWW,OAAf,QAA0B,KAAKX,KAAL,CAAWY,KAArC;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAQ,QAAA,KAAK,EAAE,KAAKC,KAApB;AAA2B,QAAA,OAAO,EAAE,KAAKV,QAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAIE;AAAQ,QAAA,KAAK,EAAE,KAAKU,KAApB;AAA2B,QAAA,OAAO,EAAE,KAAKR,KAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AASD;;AAtC6B;;AA0ChCP,OAAO,GAAGD,OAAO,CAAEiB,KAAD,IAAUA,KAAX,CAAP,CAAyBhB,OAAzB,CAAV;AACA,eAAeA,OAAf","sourcesContent":["import React, {Component} from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\n\r\nclass Counter extends Component {\r\n  style = {\r\n    fontSize:\"12pt\",\r\n    padding:\"5px 15px\"\r\n  }\r\n\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.doAction = this.doAction.bind(this);\r\n    this.reset = this.reset.bind(this);\r\n  }\r\n\r\n\r\n  doAction(e){\r\n    if (e.shiftKey){\r\n      return this.props.dispatch({ type:'DECREMENT' });\r\n    } else {\r\n      return this.props.dispatch({ type:'INCREMENT' });\r\n    }\r\n  }\r\n\r\n\r\n  reset() {\r\n    return this.props.dispatch({ type:'RESET' });\r\n  }\r\n\r\n\r\n  render () {\r\n    return (\r\n      <div>\r\n        <p>{this.props.message}: {this.props.count}</p>\r\n        <button style={this.style} onClick={this.doAction}>\r\n          Count</button>\r\n        <button style={this.style} onClick={this.reset}>\r\n          Reset</button>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nCounter = connect((state)=> state)(Counter);\r\nexport default Counter;\r\n"]},"metadata":{},"sourceType":"module"}